{"version":3,"sources":["ng://ng-zorro-antd/avatar/nz-avatar.component.ts","ng://ng-zorro-antd/avatar/nz-avatar.module.ts"],"names":["NzAvatarComponent","elementRef","cd","updateHostClassService","renderer","platform","this","nzShape","nzSize","oldAPIIcon","hasText","hasSrc","hasIcon","el","nativeElement","prefixCls","sizeMap","large","small","prototype","setClass","classMap","_a","nzIcon","updateHostClass","detectChanges","imgError","nzText","notifyCalc","setSizeStyle","ngOnChanges","changes","hasOwnProperty","currentValue","indexOf","nzSrc","calcStringSize","childrenWidth","textEl","offsetWidth","avatarWidth","getBoundingClientRect","width","scale","textStyles","transform","Object","assign","lineHeight","_this","isBrowser","setTimeout","size","setStyle","Component","args","selector","exportAs","template","providers","NzUpdateHostClassService","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ElementRef","ChangeDetectorRef","Renderer2","Platform","Input","ViewChild","static","NzAvatarModule","NgModule","declarations","exports","imports","CommonModule","NzIconModule"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NzSizeLDSType, NzSizeMap, NzUpdateHostClassService } from 'ng-zorro-antd/core';\n\nexport type NzAvatarShape = 'square' | 'circle';\nexport type NzAvatarSize = NzSizeLDSType | number;\n\nexport interface NzAvatarSizeMap {\n  [size: string]: string;\n}\n\n@Component({\n  selector: 'nz-avatar',\n  exportAs: 'nzAvatar',\n  templateUrl: './nz-avatar.component.html',\n  providers: [NzUpdateHostClassService],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class NzAvatarComponent implements OnChanges {\n  @Input() nzShape: NzAvatarShape = 'circle';\n  @Input() nzSize: NzAvatarSize = 'default';\n  @Input() nzText: string;\n  @Input() nzSrc: string;\n  @Input() nzSrcSet: string;\n  @Input() nzAlt: string;\n  @Input() nzIcon: string;\n\n  oldAPIIcon = true; // Make the user defined icon compatible to old API. Should be removed in 2.0.\n  hasText: boolean = false;\n  hasSrc: boolean = true;\n  hasIcon: boolean = false;\n  textStyles: {};\n\n  @ViewChild('textEl', { static: false }) textEl: ElementRef;\n\n  private el: HTMLElement = this.elementRef.nativeElement;\n  private prefixCls = 'ant-avatar';\n  private sizeMap: NzSizeMap = { large: 'lg', small: 'sm' };\n\n  constructor(\n    private elementRef: ElementRef,\n    private cd: ChangeDetectorRef,\n    private updateHostClassService: NzUpdateHostClassService,\n    private renderer: Renderer2,\n    private platform: Platform\n  ) {}\n\n  setClass(): this {\n    const classMap = {\n      [this.prefixCls]: true,\n      [`${this.prefixCls}-${this.sizeMap[this.nzSize]}`]: this.sizeMap[this.nzSize],\n      [`${this.prefixCls}-${this.nzShape}`]: this.nzShape,\n      [`${this.prefixCls}-icon`]: this.nzIcon,\n      [`${this.prefixCls}-image`]: this.hasSrc // downgrade after image error\n    };\n    this.updateHostClassService.updateHostClass(this.el, classMap);\n    this.cd.detectChanges();\n    return this;\n  }\n\n  imgError(): void {\n    this.hasSrc = false;\n    this.hasIcon = false;\n    this.hasText = false;\n    if (this.nzIcon) {\n      this.hasIcon = true;\n    } else if (this.nzText) {\n      this.hasText = true;\n    }\n    this.setClass().notifyCalc();\n    this.setSizeStyle();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('nzIcon') && changes.nzIcon.currentValue) {\n      this.oldAPIIcon = changes.nzIcon.currentValue.indexOf('anticon') > -1;\n    }\n    this.hasText = !this.nzSrc && !!this.nzText;\n    this.hasIcon = !this.nzSrc && !!this.nzIcon;\n    this.hasSrc = !!this.nzSrc;\n\n    this.setClass().notifyCalc();\n    this.setSizeStyle();\n  }\n\n  private calcStringSize(): void {\n    if (!this.hasText) {\n      return;\n    }\n\n    const childrenWidth = this.textEl.nativeElement.offsetWidth;\n    const avatarWidth = this.el.getBoundingClientRect().width;\n    const scale = avatarWidth - 8 < childrenWidth ? (avatarWidth - 8) / childrenWidth : 1;\n    this.textStyles = {\n      transform: `scale(${scale}) translateX(-50%)`\n    };\n    if (typeof this.nzSize === 'number') {\n      Object.assign(this.textStyles, {\n        lineHeight: `${this.nzSize}px`\n      });\n    }\n    this.cd.detectChanges();\n  }\n\n  private notifyCalc(): this {\n    // If use ngAfterViewChecked, always demands more computations, so......\n    if (this.platform.isBrowser) {\n      setTimeout(() => {\n        this.calcStringSize();\n      });\n    }\n    return this;\n  }\n\n  private setSizeStyle(): void {\n    const size = typeof this.nzSize === 'string' ? this.nzSize : `${this.nzSize}px`;\n    this.renderer.setStyle(this.el, 'width', size);\n    this.renderer.setStyle(this.el, 'height', size);\n    this.renderer.setStyle(this.el, 'line-height', size);\n    if (this.hasIcon) {\n      this.renderer.setStyle(this.el, 'font-size', `calc(${size} / 2)`);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzAvatarComponent } from './nz-avatar.component';\n\n@NgModule({\n  declarations: [NzAvatarComponent],\n  exports: [NzAvatarComponent],\n  imports: [CommonModule, NzIconModule]\n})\nexport class NzAvatarModule {}\n"]}