{"version":3,"sources":["ng://ng-zorro-antd/calendar/nz-calendar-cells.ts","ng://ng-zorro-antd/calendar/nz-calendar-header.component.ts","ng://ng-zorro-antd/calendar/nz-calendar.component.ts","ng://ng-zorro-antd/calendar/nz-calendar.module.ts"],"names":["NzDateCellDirective","Directive","args","selector","exportAs","NzMonthCellDirective","NzDateFullCellDirective","NzMonthFullCellDirective","NzCalendarHeaderComponent","i18n","dateHelper","this","mode","modeChange","EventEmitter","fullscreen","yearChange","monthChange","_activeDate","Date","yearOffset","yearTotal","Object","defineProperty","prototype","value","setUpYears","activeDate","getFullYear","getMonth","getLocale","Calendar","year","month","ngOnInit","setUpMonths","updateYear","emit","start","activeYear","end","years","i","push","label","months","dateInMonth","setMonth","monthText","format","Component","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","template","host","[style.display]","[class.ant-fullcalendar-header]","I18n","DateHelperService","Input","Output","NzCalendarComponent","cdr","nzMode","nzModeChange","nzPanelChange","nzSelectChange","nzValueChange","daysInWeek","monthsInYear","dateMatrix","currentDateRow","currentDateCol","activeDateRow","activeDateCol","currentMonthRow","currentMonthCol","activeMonthRow","activeMonthCol","dateCell","dateFullCell","monthCell","monthFullCell","currentDate","onChangeFn","onTouchFn","updateDate","coerceBooleanProperty","startOfWeek","startOfMonth","weekStartsOn","getFirstDayOfWeek","setUpDaysInWeek","setUpMonthsInYear","setUpDateMatrix","calculateCurrentDate","calculateActiveDate","calculateCurrentMonth","calculateActiveMonth","onModeChange","date","onDateSelect","onYearSelect","setYear","onMonthSelect","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","touched","dayChanged","isSameDay","monthChanged","isSameMonth","yearChanged","isSameYear","weekStart","addDays","title","relyOnDatePipe","monthStart","monthEnd","endOfMonth","weekDiff","differenceInCalendarWeeks","week","row","calendarStart","day","monthDiff","differenceInCalendarMonths","dateFormat","getLocaleData","rel","isThisMonth","differenceInCalendarDays","isThisYear","yearStart","startOfYear","Math","floor","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","NzI18nService","ChangeDetectorRef","ContentChild","DateCell","static","read","TemplateRef","DateFullCell","MonthCell","MonthFullCell","HostBinding","NzCalendarModule","NgModule","declarations","exports","imports","CommonModule","FormsModule","NzI18nModule","NzRadioModule","NzSelectModule"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[nzDateCell]',\n  exportAs: 'nzDateCell'\n})\nexport class NzDateCellDirective {}\n\n@Directive({\n  selector: '[nzMonthCell]',\n  exportAs: 'nzMonthCell'\n})\nexport class NzMonthCellDirective {}\n\n@Directive({\n  selector: '[nzDateFullCell]',\n  exportAs: 'nzDateFullCell'\n})\nexport class NzDateFullCellDirective {}\n\n@Directive({\n  selector: '[nzMonthFullCell]',\n  exportAs: 'nzMonthFullCell'\n})\nexport class NzMonthFullCellDirective {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\nimport setMonth from 'date-fns/set_month';\nimport { DateHelperService, NzI18nService as I18n } from 'ng-zorro-antd/i18n';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'nz-calendar-header',\n  exportAs: 'nzCalendarHeader',\n  templateUrl: './nz-calendar-header.component.html',\n  host: {\n    '[style.display]': `'block'`,\n    '[class.ant-fullcalendar-header]': `true`\n  }\n})\nexport class NzCalendarHeaderComponent implements OnInit {\n  @Input() mode: 'month' | 'year' = 'month';\n  @Output() readonly modeChange: EventEmitter<'month' | 'year'> = new EventEmitter();\n\n  @Input() fullscreen: boolean = true;\n\n  @Input()\n  set activeDate(value: Date) {\n    this._activeDate = value;\n    this.setUpYears();\n  }\n\n  get activeDate(): Date {\n    return this._activeDate;\n  }\n\n  @Output() readonly yearChange: EventEmitter<number> = new EventEmitter();\n  @Output() readonly monthChange: EventEmitter<number> = new EventEmitter();\n\n  _activeDate = new Date();\n  yearOffset: number = 10;\n  yearTotal: number = 20;\n  years: Array<{ label: string; value: number }>;\n  months: Array<{ label: string; value: number }>;\n\n  get activeYear(): number {\n    return this.activeDate.getFullYear();\n  }\n\n  get activeMonth(): number {\n    return this.activeDate.getMonth();\n  }\n\n  get size(): string {\n    return this.fullscreen ? 'default' : 'small';\n  }\n\n  get yearTypeText(): string {\n    return this.i18n.getLocale().Calendar.year;\n  }\n\n  get monthTypeText(): string {\n    return this.i18n.getLocale().Calendar.month;\n  }\n\n  constructor(private i18n: I18n, private dateHelper: DateHelperService) {}\n\n  ngOnInit(): void {\n    this.setUpYears();\n    this.setUpMonths();\n  }\n\n  updateYear(year: number): void {\n    this.yearChange.emit(year);\n    this.setUpYears(year);\n  }\n\n  private setUpYears(year?: number): void {\n    const start = (year || this.activeYear) - this.yearOffset;\n    const end = start + this.yearTotal;\n\n    this.years = [];\n    for (let i = start; i < end; i++) {\n      this.years.push({ label: `${i}`, value: i });\n    }\n  }\n\n  private setUpMonths(): void {\n    this.months = [];\n\n    for (let i = 0; i < 12; i++) {\n      const dateInMonth = setMonth(this.activeDate, i);\n      const monthText = this.dateHelper.format(dateInMonth, 'MMM');\n      this.months.push({ label: monthText, value: i });\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  forwardRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport addDays from 'date-fns/add_days';\nimport differenceInCalendarDays from 'date-fns/difference_in_calendar_days';\nimport differenceInCalendarMonths from 'date-fns/difference_in_calendar_months';\nimport differenceInCalendarWeeks from 'date-fns/difference_in_calendar_weeks';\nimport endOfMonth from 'date-fns/end_of_month';\nimport isSameDay from 'date-fns/is_same_day';\nimport isSameMonth from 'date-fns/is_same_month';\nimport isSameYear from 'date-fns/is_same_year';\nimport isThisMonth from 'date-fns/is_this_month';\nimport isThisYear from 'date-fns/is_this_year';\nimport setMonth from 'date-fns/set_month';\nimport setYear from 'date-fns/set_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport startOfWeek from 'date-fns/start_of_week';\nimport startOfYear from 'date-fns/start_of_year';\n\nimport { DateHelperService, NzI18nService } from 'ng-zorro-antd/i18n';\n\nimport {\n  NzDateCellDirective as DateCell,\n  NzDateFullCellDirective as DateFullCell,\n  NzMonthCellDirective as MonthCell,\n  NzMonthFullCellDirective as MonthFullCell\n} from './nz-calendar-cells';\n\nexport type ModeType = 'month' | 'year';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'nz-calendar',\n  exportAs: 'nzCalendar',\n  templateUrl: './nz-calendar.component.html',\n  providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NzCalendarComponent), multi: true }]\n})\nexport class NzCalendarComponent implements ControlValueAccessor, OnInit {\n  @Input() nzMode: ModeType = 'month';\n  @Output() readonly nzModeChange: EventEmitter<ModeType> = new EventEmitter();\n  @Output() readonly nzPanelChange: EventEmitter<{ date: Date; mode: ModeType }> = new EventEmitter();\n\n  @Output() readonly nzSelectChange: EventEmitter<Date> = new EventEmitter();\n\n  @Input() set nzValue(value: Date) {\n    this.updateDate(value, false);\n  }\n  @Output() readonly nzValueChange: EventEmitter<Date> = new EventEmitter();\n\n  @Input()\n  set nzDateCell(value: TemplateRef<{ $implicit: Date }>) {\n    this.dateCell = value;\n  }\n\n  @Input()\n  set nzDateFullCell(value: TemplateRef<{ $implicit: Date }>) {\n    this.dateFullCell = value;\n  }\n\n  @Input()\n  set nzMonthCell(value: TemplateRef<{ $implicit: Date }>) {\n    this.monthCell = value;\n  }\n\n  @Input()\n  set nzMonthFullCell(value: TemplateRef<{ $implicit: Date }>) {\n    this.monthFullCell = value;\n  }\n\n  @Input()\n  set nzFullscreen(value: boolean) {\n    this.fullscreen = coerceBooleanProperty(value);\n  }\n  get nzFullscreen(): boolean {\n    return this.fullscreen;\n  }\n\n  @Input()\n  set nzCard(value: boolean) {\n    this.fullscreen = !coerceBooleanProperty(value);\n  }\n  get nzCard(): boolean {\n    return !this.fullscreen;\n  }\n\n  @ContentChild(DateCell, { static: false, read: TemplateRef })\n  set dateCellChild(value: TemplateRef<{ $implicit: Date }>) {\n    if (value) {\n      this.dateCell = value;\n    }\n  }\n\n  @ContentChild(DateFullCell, { static: false, read: TemplateRef })\n  set dateFullCellChild(value: TemplateRef<{ $implicit: Date }>) {\n    if (value) {\n      this.dateFullCell = value;\n    }\n  }\n\n  @ContentChild(MonthCell, { static: false, read: TemplateRef })\n  set monthCellChild(value: TemplateRef<{ $implicit: Date }>) {\n    if (value) {\n      this.monthCell = value;\n    }\n  }\n\n  @ContentChild(MonthFullCell, { static: false, read: TemplateRef })\n  set monthFullCellChild(value: TemplateRef<{ $implicit: Date }>) {\n    if (value) {\n      this.monthFullCell = value;\n    }\n  }\n\n  @HostBinding('class.ant-fullcalendar--fullscreen')\n  fullscreen = true;\n\n  daysInWeek: DayCellContext[] = [];\n  monthsInYear: MonthCellContext[] = [];\n  dateMatrix: DateCellContext[][] = [];\n  activeDate: Date = new Date();\n  currentDateRow: number = -1;\n  currentDateCol: number = -1;\n  activeDateRow: number = -1;\n  activeDateCol: number = -1;\n  currentMonthRow: number = -1;\n  currentMonthCol: number = -1;\n  activeMonthRow: number = -1;\n  activeMonthCol: number = -1;\n  dateCell: TemplateRef<{ $implicit: Date }> | null = null;\n  dateFullCell: TemplateRef<{ $implicit: Date }> | null = null;\n  monthCell: TemplateRef<{ $implicit: Date }> | null = null;\n  monthFullCell: TemplateRef<{ $implicit: Date }> | null = null;\n\n  private currentDate = new Date();\n  private onChangeFn: (date: Date) => void = () => {};\n  private onTouchFn: () => void = () => {};\n\n  private get calendarStart(): Date {\n    return startOfWeek(startOfMonth(this.activeDate), { weekStartsOn: this.dateHelper.getFirstDayOfWeek() });\n  }\n\n  constructor(private i18n: NzI18nService, private cdr: ChangeDetectorRef, private dateHelper: DateHelperService) {}\n\n  ngOnInit(): void {\n    this.setUpDaysInWeek();\n    this.setUpMonthsInYear();\n    this.setUpDateMatrix();\n    this.calculateCurrentDate();\n    this.calculateActiveDate();\n    this.calculateCurrentMonth();\n    this.calculateActiveMonth();\n  }\n\n  onModeChange(mode: ModeType): void {\n    this.nzModeChange.emit(mode);\n    this.nzPanelChange.emit({ date: this.activeDate, mode });\n  }\n\n  onDateSelect(date: Date): void {\n    this.updateDate(date);\n    this.nzSelectChange.emit(date);\n  }\n\n  onYearSelect(year: number): void {\n    const date = setYear(this.activeDate, year);\n    this.updateDate(date);\n    this.nzSelectChange.emit(date);\n  }\n\n  onMonthSelect(month: number): void {\n    const date = setMonth(this.activeDate, month);\n    this.updateDate(date);\n    this.nzSelectChange.emit(date);\n  }\n\n  writeValue(value: Date | null): void {\n    this.updateDate(value || new Date(), false);\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: (date: Date) => void): void {\n    this.onChangeFn = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouchFn = fn;\n  }\n\n  private updateDate(date: Date, touched: boolean = true): void {\n    const dayChanged = !isSameDay(date, this.activeDate);\n    const monthChanged = !isSameMonth(date, this.activeDate);\n    const yearChanged = !isSameYear(date, this.activeDate);\n\n    this.activeDate = date;\n\n    if (dayChanged) {\n      this.calculateActiveDate();\n    }\n    if (monthChanged) {\n      this.setUpDateMatrix();\n      this.calculateCurrentDate();\n      this.calculateActiveMonth();\n    }\n    if (yearChanged) {\n      this.calculateCurrentMonth();\n    }\n\n    if (touched) {\n      this.onChangeFn(date);\n      this.onTouchFn();\n      this.nzValueChange.emit(date);\n    }\n  }\n\n  private setUpDaysInWeek(): void {\n    this.daysInWeek = [];\n    const weekStart = startOfWeek(this.activeDate, { weekStartsOn: this.dateHelper.getFirstDayOfWeek() });\n    for (let i = 0; i < 7; i++) {\n      const date = addDays(weekStart, i);\n      const title = this.dateHelper.format(date, this.dateHelper.relyOnDatePipe ? 'E' : 'ddd');\n      const label = this.dateHelper.format(date, this.dateHelper.relyOnDatePipe ? 'EEEEEE' : 'dd');\n      this.daysInWeek.push({ title, label });\n    }\n  }\n\n  private setUpMonthsInYear(): void {\n    this.monthsInYear = [];\n    for (let i = 0; i < 12; i++) {\n      const date = setMonth(this.activeDate, i);\n      const title = this.dateHelper.format(date, 'MMM');\n      const label = this.dateHelper.format(date, 'MMM');\n      const start = startOfMonth(date);\n      this.monthsInYear.push({ title, label, start });\n    }\n  }\n\n  private setUpDateMatrix(): void {\n    this.dateMatrix = [];\n    const monthStart = startOfMonth(this.activeDate);\n    const monthEnd = endOfMonth(this.activeDate);\n    const weekDiff =\n      differenceInCalendarWeeks(monthEnd, monthStart, { weekStartsOn: this.dateHelper.getFirstDayOfWeek() }) + 2;\n\n    for (let week = 0; week < weekDiff; week++) {\n      const row: DateCellContext[] = [];\n      const weekStart = addDays(this.calendarStart, week * 7);\n\n      for (let day = 0; day < 7; day++) {\n        const date = addDays(weekStart, day);\n        const monthDiff = differenceInCalendarMonths(date, this.activeDate);\n        const dateFormat = this.dateHelper.relyOnDatePipe\n          ? 'longDate'\n          : this.i18n.getLocaleData('DatePicker.lang.dateFormat', 'YYYY-MM-DD');\n        const title = this.dateHelper.format(date, dateFormat);\n        const label = this.dateHelper.format(date, this.dateHelper.relyOnDatePipe ? 'dd' : 'DD');\n        const rel = monthDiff === 0 ? 'current' : monthDiff < 0 ? 'last' : 'next';\n        row.push({ title, label, rel, value: date });\n      }\n      this.dateMatrix.push(row);\n    }\n  }\n\n  private calculateCurrentDate(): void {\n    if (isThisMonth(this.activeDate)) {\n      this.currentDateRow = differenceInCalendarWeeks(this.currentDate, this.calendarStart, {\n        weekStartsOn: this.dateHelper.getFirstDayOfWeek()\n      });\n      this.currentDateCol = differenceInCalendarDays(\n        this.currentDate,\n        addDays(this.calendarStart, this.currentDateRow * 7)\n      );\n    } else {\n      this.currentDateRow = -1;\n      this.currentDateCol = -1;\n    }\n  }\n\n  private calculateActiveDate(): void {\n    this.activeDateRow = differenceInCalendarWeeks(this.activeDate, this.calendarStart, {\n      weekStartsOn: this.dateHelper.getFirstDayOfWeek()\n    });\n    this.activeDateCol = differenceInCalendarDays(this.activeDate, addDays(this.calendarStart, this.activeDateRow * 7));\n  }\n\n  private calculateCurrentMonth(): void {\n    if (isThisYear(this.activeDate)) {\n      const yearStart = startOfYear(this.currentDate);\n      const monthDiff = differenceInCalendarMonths(this.currentDate, yearStart);\n      this.currentMonthRow = Math.floor(monthDiff / 3);\n      this.currentMonthCol = monthDiff % 3;\n    } else {\n      this.currentMonthRow = -1;\n      this.currentMonthCol = -1;\n    }\n  }\n\n  private calculateActiveMonth(): void {\n    this.activeMonthRow = Math.floor(this.activeDate.getMonth() / 3);\n    this.activeMonthCol = this.activeDate.getMonth() % 3;\n  }\n}\n\nexport interface DayCellContext {\n  title: string;\n  label: string;\n}\n\nexport interface MonthCellContext {\n  title: string;\n  label: string;\n  start: Date;\n}\n\nexport interface DateCellContext {\n  title: string;\n  label: string;\n  rel: 'last' | 'current' | 'next';\n  value: Date;\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\n\nimport {\n  NzDateCellDirective,\n  NzDateFullCellDirective,\n  NzMonthCellDirective,\n  NzMonthFullCellDirective\n} from './nz-calendar-cells';\nimport { NzCalendarHeaderComponent } from './nz-calendar-header.component';\nimport { NzCalendarComponent } from './nz-calendar.component';\n\n@NgModule({\n  declarations: [\n    NzCalendarHeaderComponent,\n    NzCalendarComponent,\n    NzDateCellDirective,\n    NzDateFullCellDirective,\n    NzMonthCellDirective,\n    NzMonthFullCellDirective\n  ],\n  exports: [\n    NzCalendarComponent,\n    NzDateCellDirective,\n    NzDateFullCellDirective,\n    NzMonthCellDirective,\n    NzMonthFullCellDirective\n  ],\n  imports: [CommonModule, FormsModule, NzI18nModule, NzRadioModule, NzSelectModule]\n})\nexport class NzCalendarModule {}\n"]}