(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('ng-zorro-antd/core'), require('@angular/common'), require('@angular/forms'), require('ng-zorro-antd/icon')) :
    typeof define === 'function' && define.amd ? define('ng-zorro-antd/tag', ['exports', '@angular/core', 'ng-zorro-antd/core', '@angular/common', '@angular/forms', 'ng-zorro-antd/icon'], factory) :
    (global = global || self, factory((global['ng-zorro-antd'] = global['ng-zorro-antd'] || {}, global['ng-zorro-antd'].tag = {}), global.ng.core, global['ng-zorro-antd'].core, global.ng.common, global.ng.forms, global['ng-zorro-antd'].icon));
}(this, function (exports, core, core$1, common, forms, icon) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NzTagComponent = /** @class */ (function () {
        function NzTagComponent(renderer, elementRef, nzUpdateHostClassService) {
            this.renderer = renderer;
            this.elementRef = elementRef;
            this.nzUpdateHostClassService = nzUpdateHostClassService;
            this.presetColor = false;
            this.nzMode = 'default';
            this.nzChecked = false;
            this.nzNoAnimation = false;
            this.nzAfterClose = new core.EventEmitter();
            this.nzOnClose = new core.EventEmitter();
            this.nzCheckedChange = new core.EventEmitter();
        }
        /**
         * @private
         * @param {?=} color
         * @return {?}
         */
        NzTagComponent.prototype.isPresetColor = /**
         * @private
         * @param {?=} color
         * @return {?}
         */
        function (color) {
            if (!color) {
                return false;
            }
            return /^(pink|red|yellow|orange|cyan|green|blue|purple|geekblue|magenta|volcano|gold|lime)(-inverse)?$/.test(color);
        };
        /**
         * @private
         * @return {?}
         */
        NzTagComponent.prototype.updateClassMap = /**
         * @private
         * @return {?}
         */
        function () {
            var _a;
            this.presetColor = this.isPresetColor(this.nzColor);
            /** @type {?} */
            var prefix = 'ant-tag';
            this.nzUpdateHostClassService.updateHostClass(this.elementRef.nativeElement, (_a = {},
                _a["" + prefix] = true,
                _a[prefix + "-has-color"] = this.nzColor && !this.presetColor,
                _a[prefix + "-" + this.nzColor] = this.presetColor,
                _a[prefix + "-checkable"] = this.nzMode === 'checkable',
                _a[prefix + "-checkable-checked"] = this.nzChecked,
                _a));
        };
        /**
         * @return {?}
         */
        NzTagComponent.prototype.updateCheckedStatus = /**
         * @return {?}
         */
        function () {
            if (this.nzMode === 'checkable') {
                this.nzChecked = !this.nzChecked;
                this.nzCheckedChange.emit(this.nzChecked);
                this.updateClassMap();
            }
        };
        /**
         * @param {?} e
         * @return {?}
         */
        NzTagComponent.prototype.closeTag = /**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            this.nzOnClose.emit(e);
            if (!e.defaultPrevented) {
                this.renderer.removeChild(this.renderer.parentNode(this.elementRef.nativeElement), this.elementRef.nativeElement);
            }
        };
        /**
         * @param {?} e
         * @return {?}
         */
        NzTagComponent.prototype.afterAnimation = /**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            if (e.toState === 'void') {
                this.nzAfterClose.emit();
            }
        };
        /**
         * @return {?}
         */
        NzTagComponent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            this.updateClassMap();
        };
        /**
         * @return {?}
         */
        NzTagComponent.prototype.ngOnChanges = /**
         * @return {?}
         */
        function () {
            this.updateClassMap();
        };
        NzTagComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'nz-tag',
                        exportAs: 'nzTag',
                        preserveWhitespaces: false,
                        providers: [core$1.NzUpdateHostClassService],
                        animations: [core$1.fadeMotion],
                        template: "<ng-content></ng-content>\n<i nz-icon type=\"close\" *ngIf=\"nzMode==='closeable'\" tabindex=\"-1\" (click)=\"closeTag($event)\"></i>\n",
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        encapsulation: core.ViewEncapsulation.None,
                        host: {
                            '[@fadeMotion]': '',
                            '(@fadeMotion.done)': 'afterAnimation($event)',
                            '(click)': 'updateCheckedStatus()',
                            '[style.background-color]': 'presetColor? null : nzColor'
                        }
                    }] }
        ];
        /** @nocollapse */
        NzTagComponent.ctorParameters = function () { return [
            { type: core.Renderer2 },
            { type: core.ElementRef },
            { type: core$1.NzUpdateHostClassService }
        ]; };
        NzTagComponent.propDecorators = {
            nzMode: [{ type: core.Input }],
            nzColor: [{ type: core.Input }],
            nzChecked: [{ type: core.Input }],
            nzNoAnimation: [{ type: core.Input }],
            nzAfterClose: [{ type: core.Output }],
            nzOnClose: [{ type: core.Output }],
            nzCheckedChange: [{ type: core.Output }]
        };
        __decorate([
            core$1.InputBoolean(),
            __metadata("design:type", Boolean)
        ], NzTagComponent.prototype, "nzChecked", void 0);
        __decorate([
            core$1.InputBoolean(),
            __metadata("design:type", Boolean)
        ], NzTagComponent.prototype, "nzNoAnimation", void 0);
        return NzTagComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NzTagModule = /** @class */ (function () {
        function NzTagModule() {
        }
        NzTagModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [common.CommonModule, forms.FormsModule, icon.NzIconModule],
                        declarations: [NzTagComponent],
                        exports: [NzTagComponent]
                    },] }
        ];
        return NzTagModule;
    }());

    exports.NzTagComponent = NzTagComponent;
    exports.NzTagModule = NzTagModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=ng-zorro-antd-tag.umd.js.map
