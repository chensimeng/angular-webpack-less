{"version":3,"sources":["ng://ng-zorro-antd/timeline/nz-timeline-item.component.ts","ng://ng-zorro-antd/timeline/nz-timeline.component.ts","ng://ng-zorro-antd/timeline/nz-timeline.module.ts"],"names":["NzTimelineItemComponent","renderer","cdr","this","nzColor","isLast","prototype","ngOnInit","tryUpdateCustomColor","ngOnChanges","changes","detectChanges","circle","liTemplate","nativeElement","querySelector","indexOf","setStyle","removeStyle","Component","args","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","preserveWhitespaces","selector","exportAs","template","Renderer2","ChangeDetectorRef","ViewChild","static","Input","NzTimelineComponent","platform","nzReverse","isPendingBoolean","destroy$","Subject","modeChanges","nzMode","reverseChanges","pendingChanges","nzPending","previousValue","currentValue","isFirstChange","updateChildren","reverseChildTimelineDots","ngAfterContentInit","_this","listOfTimeLine","pipe","takeUntil","subscribe","ngOnDestroy","next","complete","length","length_1","toArray","forEach","item","index","position","undefined","markForCheck","isBrowser","reverseChildNodes","timeline","Platform","ContentChildren","ContentChild","NzTimelineModule","NgModule","declarations","exports","imports","CommonModule","NzIconModule","NzAddOnModule"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { NzTimelineMode } from './nz-timeline.component';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-timeline-item, [nz-timeline-item]',\n  exportAs: 'nzTimelineItem',\n  templateUrl: './nz-timeline-item.component.html'\n})\nexport class NzTimelineItemComponent implements OnInit, OnChanges {\n  @ViewChild('liTemplate', { static: true }) liTemplate: ElementRef;\n  @Input() nzColor: string = 'blue';\n  @Input() nzDot: string | TemplateRef<void>;\n\n  isLast = false;\n  position: NzTimelineMode | undefined;\n\n  constructor(private renderer: Renderer2, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.tryUpdateCustomColor();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzColor) {\n      this.tryUpdateCustomColor();\n    }\n  }\n\n  detectChanges(): void {\n    this.cdr.detectChanges();\n  }\n\n  private tryUpdateCustomColor(): void {\n    const defaultColors = ['blue', 'red', 'green'];\n    const circle = this.liTemplate.nativeElement.querySelector('.ant-timeline-item-head');\n    if (defaultColors.indexOf(this.nzColor) === -1) {\n      this.renderer.setStyle(circle, 'border-color', this.nzColor);\n    } else {\n      this.renderer.removeStyle(circle, 'border-color');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  QueryList,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { reverseChildNodes } from 'ng-zorro-antd/core';\n\nimport { NzTimelineItemComponent } from './nz-timeline-item.component';\n\nexport type NzTimelineMode = 'left' | 'alternate' | 'right';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-timeline',\n  exportAs: 'nzTimeline',\n  templateUrl: './nz-timeline.component.html'\n})\nexport class NzTimelineComponent implements AfterContentInit, OnChanges, OnDestroy {\n  @ViewChild('timeline', { static: false }) timeline: ElementRef<HTMLElement>;\n  @ContentChildren(NzTimelineItemComponent) listOfTimeLine: QueryList<NzTimelineItemComponent>;\n  @ContentChild('pending', { static: false }) _pendingContent: TemplateRef<void>;\n\n  @Input() nzMode: NzTimelineMode;\n  @Input() nzPending: string | boolean | TemplateRef<void>;\n  @Input() nzPendingDot: string | TemplateRef<void>;\n  @Input() nzReverse: boolean = false;\n\n  isPendingBoolean: boolean = false;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(private cdr: ChangeDetectorRef, private platform: Platform) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const modeChanges = changes.nzMode;\n    const reverseChanges = changes.nzReverse;\n    const pendingChanges = changes.nzPending;\n\n    if (modeChanges && (modeChanges.previousValue !== modeChanges.currentValue || modeChanges.isFirstChange())) {\n      this.updateChildren();\n    }\n    if (\n      reverseChanges &&\n      reverseChanges.previousValue !== reverseChanges.currentValue &&\n      !reverseChanges.isFirstChange()\n    ) {\n      this.reverseChildTimelineDots();\n    }\n    if (pendingChanges) {\n      this.isPendingBoolean = pendingChanges.currentValue === true;\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this.updateChildren();\n    if (this.listOfTimeLine) {\n      this.listOfTimeLine.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\n        this.updateChildren();\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private updateChildren(): void {\n    if (this.listOfTimeLine && this.listOfTimeLine.length) {\n      const length = this.listOfTimeLine.length;\n      this.listOfTimeLine.toArray().forEach((item, index) => {\n        item.isLast = !this.nzReverse ? index === length - 1 : index === 0;\n        item.position =\n          this.nzMode === 'left' || !this.nzMode\n            ? undefined\n            : this.nzMode === 'right'\n            ? 'right'\n            : this.nzMode === 'alternate' && index % 2 === 0\n            ? 'left'\n            : 'right';\n        item.detectChanges();\n      });\n      this.cdr.markForCheck();\n    }\n  }\n\n  private reverseChildTimelineDots(): void {\n    if (this.platform.isBrowser) {\n      reverseChildNodes(this.timeline.nativeElement as HTMLElement);\n      this.updateChildren();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzAddOnModule } from 'ng-zorro-antd/core';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzTimelineItemComponent } from './nz-timeline-item.component';\nimport { NzTimelineComponent } from './nz-timeline.component';\n\n@NgModule({\n  declarations: [NzTimelineItemComponent, NzTimelineComponent],\n  exports: [NzTimelineItemComponent, NzTimelineComponent],\n  imports: [CommonModule, NzIconModule, NzAddOnModule]\n})\nexport class NzTimelineModule {}\n"]}